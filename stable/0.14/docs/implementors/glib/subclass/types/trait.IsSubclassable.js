(function() {var implementors = {};
implementors["gio"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gio/subclass/prelude/trait.ApplicationImpl.html\" title=\"trait gio::subclass::prelude::ApplicationImpl\">ApplicationImpl</a>&gt; <a class=\"trait\" href=\"glib/subclass/types/trait.IsSubclassable.html\" title=\"trait glib::subclass::types::IsSubclassable\">IsSubclassable</a>&lt;T&gt; for <a class=\"struct\" href=\"gio/struct.Application.html\" title=\"struct gio::Application\">Application</a>","synthetic":false,"types":["gio::auto::application::Application"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gio/subclass/prelude/trait.InputStreamImpl.html\" title=\"trait gio::subclass::prelude::InputStreamImpl\">InputStreamImpl</a>&gt; <a class=\"trait\" href=\"glib/subclass/types/trait.IsSubclassable.html\" title=\"trait glib::subclass::types::IsSubclassable\">IsSubclassable</a>&lt;T&gt; for <a class=\"struct\" href=\"gio/struct.InputStream.html\" title=\"struct gio::InputStream\">InputStream</a>","synthetic":false,"types":["gio::auto::input_stream::InputStream"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gio/subclass/prelude/trait.IOStreamImpl.html\" title=\"trait gio::subclass::prelude::IOStreamImpl\">IOStreamImpl</a>&gt; <a class=\"trait\" href=\"glib/subclass/types/trait.IsSubclassable.html\" title=\"trait glib::subclass::types::IsSubclassable\">IsSubclassable</a>&lt;T&gt; for <a class=\"struct\" href=\"gio/struct.IOStream.html\" title=\"struct gio::IOStream\">IOStream</a>","synthetic":false,"types":["gio::auto::io_stream::IOStream"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gio/subclass/prelude/trait.OutputStreamImpl.html\" title=\"trait gio::subclass::prelude::OutputStreamImpl\">OutputStreamImpl</a>&gt; <a class=\"trait\" href=\"glib/subclass/types/trait.IsSubclassable.html\" title=\"trait glib::subclass::types::IsSubclassable\">IsSubclassable</a>&lt;T&gt; for <a class=\"struct\" href=\"gio/struct.OutputStream.html\" title=\"struct gio::OutputStream\">OutputStream</a>","synthetic":false,"types":["gio::auto::output_stream::OutputStream"]}];
implementors["glib"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()